{"ast":null,"code":"var _jsxFileName = \"/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Analytics/ExpenseChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport \"./chart.css\";\nimport { Chart, ArcElement } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(ArcElement);\nfunction ExpenseChart({\n  expenses,\n  augustExpenses\n}) {\n  _s();\n  // augustExpenses can be passed as a prop representing the data for August 2024\n\n  const [selectedPeriod, setSelectedPeriod] = useState(\"All-time\");\n\n  // Depending on the selected period, choose the appropriate data\n  const filteredExpenses = selectedPeriod === \"All-time\" ? expenses : augustExpenses;\n  const expenseData = filteredExpenses && filteredExpenses.length > 0 ? filteredExpenses.map(expense => expense.totalSpent) : [];\n  const categories = filteredExpenses && filteredExpenses.length > 0 ? filteredExpenses.map(expense => expense.category) : [];\n  const totalSpent = expenseData.reduce((sum, expense) => sum + expense, 0);\n  const data = {\n    labels: categories,\n    datasets: [{\n      label: \"expense\",\n      data: expenseData,\n      backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(255, 159, 64)', 'rgb(201, 203, 207)'],\n      hoverOffset: 4,\n      borderColor: \"transparent\"\n    }]\n  };\n  const options = {\n    plugins: {\n      legend: {\n        display: false // Hide the legend\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            let label = context.label || '';\n            if (label) {\n              label += ': ';\n            }\n            label += context.raw;\n            return label;\n          }\n        }\n      },\n      // Custom plugin to add text in the center of the doughnut\n      centerText: {\n        text: `$${totalSpent.toLocaleString()}`\n      }\n    },\n    cutout: \"70%\" // Make the center hollow\n  };\n  const centerTextPlugin = {\n    id: 'centerText',\n    beforeDraw: function (chart) {\n      const {\n        ctx,\n        width,\n        height\n      } = chart;\n      ctx.save();\n      const fontSize = (height / 150).toFixed(2);\n      ctx.font = `${fontSize}em sans-serif`;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = '#000';\n      const text = `$${totalSpent.toLocaleString()}`;\n      ctx.fillText(text, width / 2, height / 2);\n      ctx.restore();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedPeriod(\"All-time\"),\n        className: selectedPeriod === \"All-time\" ? \"active\" : \"\",\n        children: \"All-time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedPeriod(\"August 2024\"),\n        className: selectedPeriod === \"August 2024\" ? \"active\" : \"\",\n        children: \"August 2024\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), categories && categories.length > 0 ? /*#__PURE__*/_jsxDEV(Doughnut, {\n      className: \"chart-expense\",\n      data: data,\n      options: options,\n      plugins: [centerTextPlugin] // Register custom plugin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(ExpenseChart, \"lHFY73d8goRLMm1yahNb+JeVmOo=\");\n_c = ExpenseChart;\n;\nexport default ExpenseChart;\nvar _c;\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["React","useState","Doughnut","Chart","ArcElement","jsxDEV","_jsxDEV","register","ExpenseChart","expenses","augustExpenses","_s","selectedPeriod","setSelectedPeriod","filteredExpenses","expenseData","length","map","expense","totalSpent","categories","category","reduce","sum","data","labels","datasets","label","backgroundColor","hoverOffset","borderColor","options","plugins","legend","display","tooltip","callbacks","context","raw","centerText","text","toLocaleString","cutout","centerTextPlugin","id","beforeDraw","chart","ctx","width","height","save","fontSize","toFixed","font","textAlign","textBaseline","fillStyle","fillText","restore","className","children","style","justifyContent","marginBottom","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Analytics/ExpenseChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport \"./chart.css\";\nimport { Chart, ArcElement } from 'chart.js';\nChart.register(ArcElement);\n\nfunction ExpenseChart({ expenses, augustExpenses }) { \n    // augustExpenses can be passed as a prop representing the data for August 2024\n\n    const [selectedPeriod, setSelectedPeriod] = useState(\"All-time\");\n\n    // Depending on the selected period, choose the appropriate data\n    const filteredExpenses = selectedPeriod === \"All-time\" ? expenses : augustExpenses;\n    \n    const expenseData = filteredExpenses && filteredExpenses.length > 0 ? filteredExpenses.map(expense => expense.totalSpent) : [];\n    const categories = filteredExpenses && filteredExpenses.length > 0 ? filteredExpenses.map(expense => expense.category) : [];\n    \n    const totalSpent = expenseData.reduce((sum, expense) => sum + expense, 0);\n\n    const data = {\n        labels: categories,\n        datasets: [\n            {\n                label: \"expense\",\n                data: expenseData,\n                backgroundColor: [\n                    'rgb(255, 99, 132)',\n                    'rgb(54, 162, 235)',\n                    'rgb(255, 205, 86)',\n                    'rgb(75, 192, 192)',\n                    'rgb(153, 102, 255)',\n                    'rgb(255, 159, 64)',\n                    'rgb(201, 203, 207)'\n                ],\n                hoverOffset: 4,\n                borderColor: \"transparent\",\n            }\n        ]\n    };\n\n    const options = {\n        plugins: {\n            legend: {\n                display: false, // Hide the legend\n            },\n            tooltip: {\n                callbacks: {\n                    label: function (context) {\n                        let label = context.label || '';\n\n                        if (label) {\n                            label += ': ';\n                        }\n                        label += context.raw;\n                        return label;\n                    }\n                }\n            },\n            // Custom plugin to add text in the center of the doughnut\n            centerText: {\n                text: `$${totalSpent.toLocaleString()}`,\n            }\n        },\n        cutout: \"70%\", // Make the center hollow\n    };\n\n    const centerTextPlugin = {\n        id: 'centerText',\n        beforeDraw: function (chart) {\n            const { ctx, width, height } = chart;\n            ctx.save();\n            const fontSize = (height / 150).toFixed(2);\n            ctx.font = `${fontSize}em sans-serif`;\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = '#000';\n\n            const text = `$${totalSpent.toLocaleString()}`;\n            ctx.fillText(text, width / 2, height / 2);\n\n            ctx.restore();\n        }\n    };\n\n    return (\n        <div className=\"chart-container\">\n            <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '10px' }}>\n                <button onClick={() => setSelectedPeriod(\"All-time\")} className={selectedPeriod === \"All-time\" ? \"active\" : \"\"}>All-time</button>\n                <button onClick={() => setSelectedPeriod(\"August 2024\")} className={selectedPeriod === \"August 2024\" ? \"active\" : \"\"}>August 2024</button>\n            </div>\n            {categories && categories.length > 0 ? (\n                <Doughnut\n                    className=\"chart-expense\"\n                    data={data}\n                    options={options}\n                    plugins={[centerTextPlugin]} // Register custom plugin\n                />\n            ) : (\n                <p>No data found</p>\n            )}\n        </div>\n    );\n};\n\nexport default ExpenseChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}