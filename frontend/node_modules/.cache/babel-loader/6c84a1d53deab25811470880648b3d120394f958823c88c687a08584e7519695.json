{"ast":null,"code":"var _jsxFileName = \"/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Transactions/TransactionsView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./TransactionsView.css\";\nimport Transactions from \"./Transactions\";\nimport { useSelector } from \"react-redux\";\nimport { selectAllBudgets } from \"../../redux/selectors/budgetsSelector\";\nimport Budgets from \"../Budgets/Budgets\";\nimport { selectTransactionsByMonth, selectTransactionsByType } from \"../../redux/selectors/transactionsSelectors\";\nimport Button from \"../common/Button\";\nimport Filter from \"../common/Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionsView() {\n  _s();\n  const [filterDate, setFilterDate] = useState({\n    month: Date.now().getMonth(),\n    year: Date.now().getFullYear()\n  });\n  const filteredTransactionsByMonth = useSelector(state => filterDate ? selectTransactionsByMonth(state, filterDate.month, filterDate.year) : []);\n  const incomeTransactions = useSelector(state => selectTransactionsByType(state, \"income\"));\n  const expenseTransactions = useSelector(state => selectTransactionsByType(state, \"expense\"));\n  const budgets = useSelector(selectAllBudgets);\n  const getFilteredTransactions = type => {\n    if (!filterDate) {\n      // Return all transactions if no filter date is set\n      return type === \"income\" ? incomeTransactions : expenseTransactions;\n    }\n    ;\n    return filteredTransactionsByMonth.filter(transaction => transaction.type === type);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid TransactionsView\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card filter-container\",\n      children: /*#__PURE__*/_jsxDEV(Filter, {\n        className: \"card filter\",\n        transactions: incomeTransactions,\n        onFilterChange: setFilterDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card income-transactions\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [\"Income\", /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Add Income\",\n          className: \"button-add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Transactions, {\n        transactions: getFilteredTransactions('income'),\n        budgets: budgets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card expense-transactions\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [\"Expenses\", /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Add Expense\",\n          className: \"button-add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Transactions, {\n        transactions: getFilteredTransactions('expense'),\n        budgets: budgets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card budgets-container\",\n      children: /*#__PURE__*/_jsxDEV(Budgets, {\n        budgets: budgets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(TransactionsView, \"+MigdOKytStnrkmQMf2mD8Yqmsg=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n_c = TransactionsView;\n;\nexport default TransactionsView;\nvar _c;\n$RefreshReg$(_c, \"TransactionsView\");","map":{"version":3,"names":["React","useState","Transactions","useSelector","selectAllBudgets","Budgets","selectTransactionsByMonth","selectTransactionsByType","Button","Filter","jsxDEV","_jsxDEV","TransactionsView","_s","filterDate","setFilterDate","month","Date","now","getMonth","year","getFullYear","filteredTransactionsByMonth","state","incomeTransactions","expenseTransactions","budgets","getFilteredTransactions","type","filter","transaction","className","children","transactions","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","label","_c","$RefreshReg$"],"sources":["/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Transactions/TransactionsView.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./TransactionsView.css\";\nimport Transactions from \"./Transactions\";\nimport { useSelector } from \"react-redux\";\nimport { selectAllBudgets } from \"../../redux/selectors/budgetsSelector\";\nimport Budgets from \"../Budgets/Budgets\";\nimport { selectTransactionsByMonth, selectTransactionsByType } from \"../../redux/selectors/transactionsSelectors\";\nimport Button from \"../common/Button\";\nimport Filter from \"../common/Filter\";\n\n\nfunction TransactionsView() {\n    const [ filterDate, setFilterDate ] = useState({\n        month: Date.now().getMonth(),\n        year: Date.now().getFullYear(),\n    });\n    const filteredTransactionsByMonth = useSelector(state => filterDate ? selectTransactionsByMonth(state, filterDate.month, filterDate.year) : []);\n    const incomeTransactions = useSelector(state => selectTransactionsByType(state, \"income\"));\n    const expenseTransactions = useSelector(state => selectTransactionsByType(state, \"expense\"));\n    const budgets = useSelector(selectAllBudgets);\n\n    const getFilteredTransactions = (type) => {\n        if (!filterDate) {\n            // Return all transactions if no filter date is set\n            return type === \"income\" ? incomeTransactions : expenseTransactions;\n        };\n        \n        return filteredTransactionsByMonth.filter(transaction => transaction.type === type);\n    };\n\n    return (\n        <div className=\"grid TransactionsView\">\n            <div className=\"card filter-container\">\n                <Filter className=\"card filter\" transactions={incomeTransactions} onFilterChange={setFilterDate} />  \n            </div>\n            <div className=\"card income-transactions\">\n                <div className=\"card-header\">\n                    Income\n                    <Button label=\"Add Income\" className=\"button-add\" />\n                </div>\n                <Transactions transactions={getFilteredTransactions('income')} budgets={budgets} />\n            </div>\n            <div className=\"card expense-transactions\">\n                <div className=\"card-header\">\n                    Expenses\n                    <Button label=\"Add Expense\" className=\"button-add\" />\n                </div>\n                <Transactions transactions={getFilteredTransactions('expense')} budgets={budgets} />\n            </div>\n            <div className=\"card budgets-container\">\n                <Budgets budgets={budgets} />\n            </div>\n        </div>\n    )\n};\n\nexport default TransactionsView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}