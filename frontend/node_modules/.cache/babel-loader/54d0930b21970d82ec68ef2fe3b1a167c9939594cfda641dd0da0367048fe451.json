{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport transactionsSlice from \"./transactionsSlice\";\nconst initialState = {\n  byCategory: {\n    clothing: {\n      category: \"clothing\",\n      budget: 1000,\n      total: 1500,\n      transactions: []\n    }\n  },\n  byMonth: {\n    total: 0\n    /*\n        total: 0,\n        \"August 2024\": {\n            budget: 0,\n            total: 0,\n            transactions: []\n        }, \n    */\n  }\n};\nconst budgetsSlice = createSlice({\n  name: \"budgets\",\n  initialState,\n  reducers: {\n    addBudget: (state, action) => {\n      const {\n        category,\n        budget\n      } = action.payload;\n      if (!state.byCategory[category] && budget >= 0) {\n        state.byCategory[category] = {\n          category,\n          budget,\n          total: 0,\n          transactions: []\n        };\n      }\n    },\n    editBudget: (state, action) => {\n      const {\n        category,\n        budget\n      } = action.payload;\n      if (state.byCategory[category]) {\n        state.byCategory[category].budget = budget;\n      }\n\n      // TO DO Implement Change name of category\n    },\n    addBudgetTransaction: (state, action) => {\n      const {\n        category,\n        amount,\n        date\n      } = action.payload;\n      const month = new Date(date).toLocaleString(\"default\", {\n        month: \"long\",\n        year: \"numeric\"\n      });\n      if (!state.byMonth[month]) {\n        // Creates an object if new month\n        state.byMonth[month] = {\n          categories: {}\n        };\n      }\n      ;\n      if (!state.byMonth[month].categories[category]) {\n        // Creates a category object if new object\n        state.byMonth[month].categories[category] = {\n          budget: 0,\n          total: 0,\n          transactions: []\n        };\n      }\n      ;\n      if (!state.byCategory[category]) {\n        // create a new category object in the byCategory\n        state.byCategory[category] = {\n          category,\n          budget: 0,\n          total: 0,\n          transactions: []\n        };\n      }\n      state.byCategory[category].transactions.push(action.payload);\n      state.byCategory[category].total += amount;\n      state.byMonth[month].categories[category].transactions.push(action.payload);\n      state.byMonth[month].categories[category].total += amount;\n      console.log(\"Budget state\", state);\n    }\n  }\n});\nexport const {\n  addBudget,\n  editBudget,\n  addBudgetTransaction\n} = budgetsSlice.actions;\nexport default budgetsSlice.reducer;","map":{"version":3,"names":["createSlice","transactionsSlice","initialState","byCategory","clothing","category","budget","total","transactions","byMonth","budgetsSlice","name","reducers","addBudget","state","action","payload","editBudget","addBudgetTransaction","amount","date","month","Date","toLocaleString","year","categories","push","console","log","actions","reducer"],"sources":["/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/redux/slices/budgetsSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport transactionsSlice from \"./transactionsSlice\";\n\nconst initialState = {\n    byCategory: {\n        clothing: {\n            category: \"clothing\",\n            budget: 1000,\n            total: 1500,\n            transactions: [],\n        }\n    },\n    byMonth: {\n        total: 0,\n        /*\n            total: 0,\n            \"August 2024\": {\n                budget: 0,\n                total: 0,\n                transactions: []\n            }, \n        */\n    },\n};\n\nconst budgetsSlice = createSlice({\n    name: \"budgets\",\n    initialState,\n    reducers: {\n        addBudget: (state, action) => {\n            const { category, budget } = action.payload;\n\n            if (!state.byCategory[category] && budget >= 0) {\n                state.byCategory[category] = {\n                    category,\n                    budget,\n                    total: 0,\n                    transactions: []\n                };\n            }\n        },\n        editBudget: (state, action) => {\n            const { category, budget } = action.payload;\n            if (state.byCategory[category]) {\n                state.byCategory[category].budget = budget;    \n            }\n            \n            // TO DO Implement Change name of category\n        },\n        addBudgetTransaction: (state, action) => {\n            const { category, amount, date } = action.payload;\n            const month = new Date(date).toLocaleString(\"default\", {month: \"long\", year: \"numeric\"});\n\n            if (!state.byMonth[month]) {\n                // Creates an object if new month\n                state.byMonth[month] = { categories: {}}\n            };\n\n            if (!state.byMonth[month].categories[category]) {\n                // Creates a category object if new object\n                state.byMonth[month].categories[category] = { budget: 0, total: 0, transactions: []};\n            };\n\n            if (!state.byCategory[category]) {\n                // create a new category object in the byCategory\n                state.byCategory[category] = {category, budget: 0, total: 0, transactions: []};\n            }\n\n            state.byCategory[category].transactions.push(action.payload);\n            state.byCategory[category].total += amount;\n            \n            state.byMonth[month].categories[category].transactions.push(action.payload);\n            state.byMonth[month].categories[category].total += amount;\n\n\n            console.log(\"Budget state\", state);\n        },\n    }\n});\n\nexport const { addBudget, editBudget, addBudgetTransaction } = budgetsSlice.actions;\nexport default budgetsSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}