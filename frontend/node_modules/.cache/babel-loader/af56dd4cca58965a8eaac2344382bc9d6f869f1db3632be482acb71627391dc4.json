{"ast":null,"code":"export function formatCurrency(amount) {\n  return new Intl.NumberFormat('en-au', {\n    style: \"currency\",\n    currency: \"AUD\",\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(amount);\n}\nexport function getThisMonth() {\n  const date = new Date();\n  return date.toISOString().split('T')[0].slice(0, 7);\n}\n;\nexport function getNextMonth(dateString) {\n  const date = new Date(dateString);\n  date.setMonth(date.getMonth() + 1);\n  return date.toISOString().split('T')[0].slice(0, 7);\n}\nexport function getPreviousMonth(dateString) {\n  const date = new Date(dateString);\n  date.setMonth(date.getMonth() - 1);\n  return date.toISOString().split('T')[0].slice(0, 7);\n}","map":{"version":3,"names":["formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","getThisMonth","date","Date","toISOString","split","slice","getNextMonth","dateString","setMonth","getMonth","getPreviousMonth"],"sources":["/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/utils/utils.js"],"sourcesContent":["export function formatCurrency(amount) {\n    return new Intl.NumberFormat('en-au', {\n        style: \"currency\",\n        currency: \"AUD\",\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n    }).format(amount);\n}\n\nexport function getThisMonth() {\n    const date = new Date();\n    return date.toISOString().split('T')[0].slice(0, 7);\n};\n\nexport function getNextMonth(dateString) {\n    const date = new Date(dateString);\n    date.setMonth(date.getMonth() + 1)\n    return date.toISOString().split('T')[0].slice(0, 7);\n}\n\nexport function getPreviousMonth(dateString) {\n    const date = new Date(dateString);\n    date.setMonth(date.getMonth() - 1)\n    return date.toISOString().split('T')[0].slice(0, 7);\n}"],"mappings":"AAAA,OAAO,SAASA,cAAcA,CAACC,MAAM,EAAE;EACnC,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IAClCC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE,KAAK;IACfC,qBAAqB,EAAE,CAAC;IACxBC,qBAAqB,EAAE;EAC3B,CAAC,CAAC,CAACC,MAAM,CAACP,MAAM,CAAC;AACrB;AAEA,OAAO,SAASQ,YAAYA,CAAA,EAAG;EAC3B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACvB,OAAOD,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AACvD;AAAC;AAED,OAAO,SAASC,YAAYA,CAACC,UAAU,EAAE;EACrC,MAAMN,IAAI,GAAG,IAAIC,IAAI,CAACK,UAAU,CAAC;EACjCN,IAAI,CAACO,QAAQ,CAACP,IAAI,CAACQ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAClC,OAAOR,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AACvD;AAEA,OAAO,SAASK,gBAAgBA,CAACH,UAAU,EAAE;EACzC,MAAMN,IAAI,GAAG,IAAIC,IAAI,CAACK,UAAU,CAAC;EACjCN,IAAI,CAACO,QAAQ,CAACP,IAAI,CAACQ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAClC,OAAOR,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AACvD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}