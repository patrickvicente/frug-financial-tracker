{"ast":null,"code":"var _jsxFileName = \"/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Transactions/TransactionsView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./TransactionsView.css\";\nimport Transactions from \"./Transactions\";\nimport { useSelector } from \"react-redux\";\nimport { selectAllBudgets } from \"../../redux/selectors/budgetsSelector\";\nimport Budgets from \"../Budgets/Budgets\";\nimport { selectAllTransactions, selectTransactionsByMonth, selectTransactionsByType } from \"../../redux/selectors/transactionsSelectors\";\nimport Button from \"../common/Button\";\nimport Filter from \"../common/Filter\";\nimport Modal from \"../common/Modal\";\nimport TransactionForm from \"../TransactionForm/TransactionForm\";\nimport BudgetForm from \"../BudgetForm/BudgetForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionsView() {\n  _s();\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [transactionType, setTransactionType] = useState(\"\");\n  const [formType, setFormType] = useState(\"transaction\");\n  const [filterDate, setFilterDate] = useState(null);\n  const filteredTransactionsByMonth = useSelector(state => filterDate ? selectTransactionsByMonth(state, filterDate.month, filterDate.year) : []);\n  const transactions = useSelector(selectAllTransactions);\n  const incomeTransactions = useSelector(state => selectTransactionsByType(state, \"income\"));\n  const expenseTransactions = useSelector(state => selectTransactionsByType(state, \"expense\"));\n  const budgets = useSelector(selectAllBudgets);\n  const handleAdd = (form, txnType) => {\n    setFormType(form);\n    setTransactionType(txnType);\n    setModalOpen(true);\n  };\n  const closeModal = () => setModalOpen(false);\n  const getFilteredTransactions = type => {\n    if (!filterDate) {\n      // Return all transactions if no filter date is set\n      return type === \"income\" ? incomeTransactions : expenseTransactions;\n    }\n    return filteredTransactionsByMonth.filter(transaction => transaction.type === type);\n  };\n  const getFilteredBudgets = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid TransactionsView\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card filter-container\",\n      children: /*#__PURE__*/_jsxDEV(Filter, {\n        className: \"card filter\",\n        transactions: transactions,\n        onFilterChange: setFilterDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card income-transactions\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [\"Income\", /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Add Income\",\n          className: \"button-add\",\n          onClick: () => handleAdd(\"transaction\", \"income\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Transactions, {\n        transactions: getFilteredTransactions('income'),\n        budgets: budgets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card expense-transactions\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [\"Expenses\", /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Add Expense\",\n          className: \"button-add\",\n          onClick: () => handleAdd(\"transaction\", \"expense\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Transactions, {\n        transactions: getFilteredTransactions('expense'),\n        budgets: budgets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card budgets-container\",\n      children: /*#__PURE__*/_jsxDEV(Budgets, {\n        budgets: budgets,\n        handleAdd: handleAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: closeModal,\n      children: formType === \"transaction\" ? /*#__PURE__*/_jsxDEV(TransactionForm, {\n        closeModal: closeModal,\n        type: transactionType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(BudgetForm, {\n        closeModal: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(TransactionsView, \"SDiQXS0iA2eXjgKd8uL6UTo0qLI=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = TransactionsView;\n;\nexport default TransactionsView;\nvar _c;\n$RefreshReg$(_c, \"TransactionsView\");","map":{"version":3,"names":["React","useState","Transactions","useSelector","selectAllBudgets","Budgets","selectAllTransactions","selectTransactionsByMonth","selectTransactionsByType","Button","Filter","Modal","TransactionForm","BudgetForm","jsxDEV","_jsxDEV","TransactionsView","_s","isModalOpen","setModalOpen","transactionType","setTransactionType","formType","setFormType","filterDate","setFilterDate","filteredTransactionsByMonth","state","month","year","transactions","incomeTransactions","expenseTransactions","budgets","handleAdd","form","txnType","closeModal","getFilteredTransactions","type","filter","transaction","getFilteredBudgets","className","children","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","label","onClick","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Transactions/TransactionsView.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./TransactionsView.css\";\nimport Transactions from \"./Transactions\";\nimport { useSelector } from \"react-redux\";\nimport { selectAllBudgets } from \"../../redux/selectors/budgetsSelector\";\nimport Budgets from \"../Budgets/Budgets\";\nimport { selectAllTransactions, selectTransactionsByMonth, selectTransactionsByType } from \"../../redux/selectors/transactionsSelectors\";\nimport Button from \"../common/Button\";\nimport Filter from \"../common/Filter\";\nimport Modal from \"../common/Modal\";\nimport TransactionForm from \"../TransactionForm/TransactionForm\";\nimport BudgetForm from \"../BudgetForm/BudgetForm\";\n\nfunction TransactionsView() {\n    const [ isModalOpen, setModalOpen ] = useState(false);\n    const [ transactionType, setTransactionType ] = useState(\"\");\n    const [ formType, setFormType ] = useState(\"transaction\");\n    const [ filterDate, setFilterDate ] = useState(null);\n    const filteredTransactionsByMonth = useSelector(state => filterDate ? selectTransactionsByMonth(state, filterDate.month, filterDate.year) : []);\n    const transactions = useSelector(selectAllTransactions);\n    const incomeTransactions = useSelector(state => selectTransactionsByType(state, \"income\"));\n    const expenseTransactions = useSelector(state => selectTransactionsByType(state, \"expense\"));\n    const budgets = useSelector(selectAllBudgets);\n\n    const handleAdd = (form, txnType) => {\n        setFormType(form)\n        setTransactionType(txnType);\n        setModalOpen(true);\n    };\n\n    const closeModal = () => setModalOpen(false);\n\n    const getFilteredTransactions = (type) => {\n        if (!filterDate) {\n            // Return all transactions if no filter date is set\n            return type === \"income\" ? incomeTransactions : expenseTransactions;\n        }\n        \n        return filteredTransactionsByMonth.filter(transaction => transaction.type === type);\n    };\n\n    const getFilteredBudgets = () => {\n        \n    };\n\n    return (\n        <div className=\"grid TransactionsView\">\n            <div className=\"card filter-container\">\n                <Filter className=\"card filter\" transactions={transactions} onFilterChange={setFilterDate} />  \n            </div>\n            <div className=\"card income-transactions\">\n                <div className=\"card-header\">\n                    Income\n                    <Button label=\"Add Income\" className=\"button-add\" onClick={() => handleAdd(\"transaction\", \"income\")} />\n                </div>\n                <Transactions transactions={getFilteredTransactions('income')} budgets={budgets} />\n            </div>\n            <div className=\"card expense-transactions\">\n                <div className=\"card-header\">\n                    Expenses\n                    <Button label=\"Add Expense\" className=\"button-add\" onClick={() => handleAdd(\"transaction\", \"expense\")}/>\n                </div>\n                <Transactions transactions={getFilteredTransactions('expense')} budgets={budgets} />\n            </div>\n            <div className=\"card budgets-container\">\n                <Budgets budgets={budgets} handleAdd={handleAdd} />\n            </div>\n            <Modal isOpen={isModalOpen} onClose={closeModal} >\n                {\n                    formType === \"transaction\" \n                    ? <TransactionForm closeModal={closeModal} type={transactionType}  />\n                    : <BudgetForm closeModal={closeModal} />\n                }\n            </Modal>\n        </div>\n    )\n};\n\nexport default TransactionsView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}