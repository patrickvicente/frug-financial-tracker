{"ast":null,"code":"var _jsxFileName = \"/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Accounts/Accounts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Accounts.css\";\nimport { useSelector } from \"react-redux\";\nimport { selectAllAccounts } from \"../../redux/selectors/accountsSelector\";\nimport Account from \"./Account\";\nimport OptionsMenu from \"../common/OptionsMenu\";\nimport { set } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Accounts({\n  handleForm,\n  handleEdit\n}) {\n  _s();\n  const accounts = useSelector(selectAllAccounts);\n  const [isEditMode, setIsEditMode] = useState(false); //Track edit mode state\n  const [selectedAccount, setSelectedAccount] = useState(null); // track selected account\n  const [isModalOpen, setIsModalOpen] = useState(false); // track moda open\n\n  const toggleEditMode = () => {\n    setIsEditMode(prevState => !prevState); // Toggle the edit mode\n  };\n  const openAccountModal = account => {\n    setSelectedAccount(account);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedAccount(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"accounts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: [\"Accounts\", /*#__PURE__*/_jsxDEV(OptionsMenu, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-item\",\n          onClick: () => handleForm(\"account\"),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-item\",\n          onClick: toggleEditMode,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-item\",\n          onClick: () => handleForm(\"account\", \"transfer\"),\n          children: \"Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), !accounts ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please add an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accounts-list\",\n      children: Object.entries(accounts).map(([key, value]) => {\n        const {\n          name,\n          type,\n          currentBalance\n        } = value;\n        const id = key;\n        return /*#__PURE__*/_jsxDEV(Account, {\n          id: id,\n          name: name,\n          type: type,\n          currentBalance: currentBalance,\n          isEditMode: isEditMode,\n          onClick: () => openAccountModal(id)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Accounts, \"Rq4qwFA86tgcnB3yiP409m9PESA=\", false, function () {\n  return [useSelector];\n});\n_c = Accounts;\nexport default Accounts;\nvar _c;\n$RefreshReg$(_c, \"Accounts\");","map":{"version":3,"names":["React","useState","useSelector","selectAllAccounts","Account","OptionsMenu","set","jsxDEV","_jsxDEV","Accounts","handleForm","handleEdit","_s","accounts","isEditMode","setIsEditMode","selectedAccount","setSelectedAccount","isModalOpen","setIsModalOpen","toggleEditMode","prevState","openAccountModal","account","closeModal","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","key","value","name","type","currentBalance","id","_c","$RefreshReg$"],"sources":["/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Accounts/Accounts.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Accounts.css\";\nimport { useSelector } from \"react-redux\";\nimport { selectAllAccounts } from \"../../redux/selectors/accountsSelector\";\nimport Account from \"./Account\";\nimport OptionsMenu from \"../common/OptionsMenu\";\nimport { set } from \"date-fns\";\n\nfunction Accounts({ handleForm, handleEdit }) {\n    const accounts = useSelector(selectAllAccounts);\n    const [ isEditMode, setIsEditMode] = useState(false); //Track edit mode state\n    const [ selectedAccount, setSelectedAccount ] = useState(null); // track selected account\n    const [ isModalOpen, setIsModalOpen ] = useState(false); // track moda open\n\n    const toggleEditMode = () => {\n        setIsEditMode((prevState) => !prevState); // Toggle the edit mode\n    };\n\n    const openAccountModal = (account) => {\n        setSelectedAccount(account);\n        setIsModalOpen(true)\n    };\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n        setSelectedAccount(null);\n    };\n\n    return (\n        <div className=\"accounts\">\n            <div className=\"card-header\">\n                Accounts\n                <OptionsMenu >\n                    <div className=\"dropdown-item\" onClick={() => handleForm(\"account\")}>\n                        Add\n                    </div>\n                    <div className=\"dropdown-item\" onClick={toggleEditMode}>\n                        Edit\n                    </div>\n                    <div className=\"dropdown-item\" onClick={() => handleForm(\"account\", \"transfer\")}>\n                        Transfer\n                    </div>\n                </OptionsMenu>\n                \n            </div>\n            {/* Checks if there is an existing account */}\n            {!accounts ? (\n                <p>Please add an account</p>\n            ) : (\n                <div className=\"accounts-list\">\n                    {/* maps through the state and renders account */}\n                    {Object.entries(accounts).map(([key, value]) => {\n                        const { name, type, currentBalance } = value;\n                        const id = key;\n\n                        return (\n                            <Account\n                                key={id}\n                                id={id}\n                                name={name}\n                                type={type}\n                                currentBalance={currentBalance}\n                                isEditMode={isEditMode}\n                                onClick={() => openAccountModal(id)}\n                            />\n                        );\n                    })}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Accounts;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}