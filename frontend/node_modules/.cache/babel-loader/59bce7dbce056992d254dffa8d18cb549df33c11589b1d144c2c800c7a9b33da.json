{"ast":null,"code":"var _jsxFileName = \"/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/common/Filter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Filter({\n  transactions,\n  onFilterChange\n}) {\n  _s();\n  const [uniqueDates, setUniqueDates] = useState([]);\n  useEffect(() => {\n    const dates = transactions.map(transaction => {\n      const date = new Date(transaction.date);\n      return date.toLocaleString(\"default\", {\n        month: \"long\",\n        year: \"numeric\"\n      });\n    });\n    setUniqueDates([...new Set(dates)]);\n  }, [transactions]);\n  const handleFilterChange = e => {\n    const value = e.target.value;\n    if (value === \"all\") {\n      onFilterChange(null);\n    } else {\n      const [month, year] = value.split(\" \");\n      const date = new Date(`${month} 1, ${year}`);\n      onFilterChange({\n        month: date.getMonth(),\n        year: date.getFullYear()\n      });\n    }\n    console.log('Date Logged', date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"dateFilter\",\n      children: \"Filter by Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"dateFilter\",\n      onChange: handleFilterChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"all\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), uniqueDates.map((date, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: date,\n        children: date\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Filter, \"EGFA1Gj56Xm4aFxVUJsM6Jdpnss=\");\n_c = Filter;\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Filter","transactions","onFilterChange","_s","uniqueDates","setUniqueDates","dates","map","transaction","date","Date","toLocaleString","month","year","Set","handleFilterChange","e","value","target","split","getMonth","getFullYear","console","log","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","index","_c","$RefreshReg$"],"sources":["/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/common/Filter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Filter({ transactions, onFilterChange }) {\n    const [uniqueDates, setUniqueDates] = useState([]);\n\n    useEffect(() => {\n        const dates = transactions.map(transaction => {\n            const date = new Date(transaction.date);\n            return date.toLocaleString(\"default\", { month: \"long\", year: \"numeric\" });\n        });\n        setUniqueDates([...new Set(dates)]);\n    }, [transactions]);\n\n    const handleFilterChange = (e) => {\n        const value = e.target.value;\n        if (value === \"all\") {\n            onFilterChange(null);\n        } else {\n            const [month, year] = value.split(\" \");\n            const date = new Date(`${month} 1, ${year}`);\n            onFilterChange({\n                month: date.getMonth(),\n                year: date.getFullYear()\n            });\n        }\n\n        console.log('Date Logged', date);\n    };\n\n    return (\n        <div className=\"filter-container\">\n            <label htmlFor=\"dateFilter\">Filter by Date:</label>\n            <select id=\"dateFilter\" onChange={handleFilterChange}>\n                <option value=\"all\">All</option>\n                {uniqueDates.map((date, index) => (\n                    <option key={index} value={date}>{date}</option>\n                ))}\n            </select>\n        </div>\n    );\n}\n\nexport default Filter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,MAAMA,CAAC;EAAEC,YAAY;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACZ,MAAMS,KAAK,GAAGL,YAAY,CAACM,GAAG,CAACC,WAAW,IAAI;MAC1C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,WAAW,CAACC,IAAI,CAAC;MACvC,OAAOA,IAAI,CAACE,cAAc,CAAC,SAAS,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAU,CAAC,CAAC;IAC7E,CAAC,CAAC;IACFR,cAAc,CAAC,CAAC,GAAG,IAAIS,GAAG,CAACR,KAAK,CAAC,CAAC,CAAC;EACvC,CAAC,EAAE,CAACL,YAAY,CAAC,CAAC;EAElB,MAAMc,kBAAkB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5B,IAAIA,KAAK,KAAK,KAAK,EAAE;MACjBf,cAAc,CAAC,IAAI,CAAC;IACxB,CAAC,MAAM;MACH,MAAM,CAACU,KAAK,EAAEC,IAAI,CAAC,GAAGI,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC;MACtC,MAAMV,IAAI,GAAG,IAAIC,IAAI,CAAC,GAAGE,KAAK,OAAOC,IAAI,EAAE,CAAC;MAC5CX,cAAc,CAAC;QACXU,KAAK,EAAEH,IAAI,CAACW,QAAQ,CAAC,CAAC;QACtBP,IAAI,EAAEJ,IAAI,CAACY,WAAW,CAAC;MAC3B,CAAC,CAAC;IACN;IAEAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEd,IAAI,CAAC;EACpC,CAAC;EAED,oBACIV,OAAA;IAAKyB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7B1B,OAAA;MAAO2B,OAAO,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACnD/B,OAAA;MAAQgC,EAAE,EAAC,YAAY;MAACC,QAAQ,EAAEjB,kBAAmB;MAAAU,QAAA,gBACjD1B,OAAA;QAAQkB,KAAK,EAAC,KAAK;QAAAQ,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC/B1B,WAAW,CAACG,GAAG,CAAC,CAACE,IAAI,EAAEwB,KAAK,kBACzBlC,OAAA;QAAoBkB,KAAK,EAAER,IAAK;QAAAgB,QAAA,EAAEhB;MAAI,GAAzBwB,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6B,CAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAAC3B,EAAA,CAtCQH,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AAwCf,eAAeA,MAAM;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}