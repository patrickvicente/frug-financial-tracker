{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [];\nconst transactionsSlice = createSlice({\n  name: \"transactions\",\n  initialState,\n  reducers: {\n    addExpense: (state, action) => {\n      const {\n        id,\n        description\n      } = action.payload;\n      const newExpense = {\n        id: id,\n        description: description\n      };\n      state.append(newExpense);\n    }\n  }\n});\nexport const selectTransactions = state => state.transactions;\nexport const {\n  addExpense\n} = transactionsSlice.actions;\nexport default transactionsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","transactionsSlice","name","reducers","addExpense","state","action","id","description","payload","newExpense","append","selectTransactions","transactions","actions","reducer"],"sources":["/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/redux/slices/transactionsSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst transactionsSlice = createSlice({\n    name: \"transactions\",\n    initialState, \n    reducers: {\n        addExpense: (state, action) => {\n            const {id, description } = action.payload\n\n            const newExpense = {\n                id: id,\n                description: description,\n            };\n            state.append(newExpense)\n        },\n    },\n});\n\n\nexport const selectTransactions = (state) => state.transactions\nexport const { addExpense } = transactionsSlice.actions;\nexport default transactionsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG,EAAE;AAEvB,MAAMC,iBAAiB,GAAGF,WAAW,CAAC;EAClCG,IAAI,EAAE,cAAc;EACpBF,YAAY;EACZG,QAAQ,EAAE;IACNC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAM;QAACC,EAAE;QAAEC;MAAY,CAAC,GAAGF,MAAM,CAACG,OAAO;MAEzC,MAAMC,UAAU,GAAG;QACfH,EAAE,EAAEA,EAAE;QACNC,WAAW,EAAEA;MACjB,CAAC;MACDH,KAAK,CAACM,MAAM,CAACD,UAAU,CAAC;IAC5B;EACJ;AACJ,CAAC,CAAC;AAGF,OAAO,MAAME,kBAAkB,GAAIP,KAAK,IAAKA,KAAK,CAACQ,YAAY;AAC/D,OAAO,MAAM;EAAET;AAAW,CAAC,GAAGH,iBAAiB,CAACa,OAAO;AACvD,eAAeb,iBAAiB,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}