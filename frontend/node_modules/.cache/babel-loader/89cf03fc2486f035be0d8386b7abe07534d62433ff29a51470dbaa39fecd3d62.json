{"ast":null,"code":"// Select all Transactions\nexport const selectAllTransactions = state => {\n  const {\n    byId,\n    allIds\n  } = state.transactions;\n  console.log('Transactions State:', state);\n  if (!state || typeof state !== 'object') {\n    console.error('transactionsState is not an object');\n    return [];\n  }\n  ;\n\n  // Log specific properties\n  console.log('byId:', byId);\n  console.log('allIds:', allIds);\n  if (!allIds || !Array.isArray(allIds)) {\n    console.error('allIds is not an array or is undefined');\n    return [];\n  }\n  return allIds.map(id => byId[id]);\n};\nexport const selectTransactionsByMonth = (state, month, year) => {\n  return Object.values(selectAllTransactions(state)).filter(transaction => {\n    const transactionDate = new Date(transaction.date);\n    return transactionDate.getMonth() === month && transactionDate.getFullYear === year;\n  });\n};\n\n// Select a transaction by id\n\n//  Select Transactions by type\n// selectors.js\n\nexport const selectTransactionsByType = (state, type) => {\n  if (!state || !state.transactions || !state.transactions.byId) {\n    return [];\n  }\n  return Object.values(state.transactions.byId).filter(transaction => transaction.type === type);\n};","map":{"version":3,"names":["selectAllTransactions","state","byId","allIds","transactions","console","log","error","Array","isArray","map","id","selectTransactionsByMonth","month","year","Object","values","filter","transaction","transactionDate","Date","date","getMonth","getFullYear","selectTransactionsByType","type"],"sources":["/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/redux/selectors/transactionsSelectors.js"],"sourcesContent":["// Select all Transactions\nexport const selectAllTransactions = (state) => {\n    const { byId, allIds } = state.transactions;\n    console.log('Transactions State:', state);\n\n    if (!state || typeof state !== 'object') {\n        console.error('transactionsState is not an object');\n        return [];\n      };\n\n    \n    \n      // Log specific properties\n    console.log('byId:', byId);\n    console.log('allIds:', allIds);\n\n    if (!allIds || !Array.isArray(allIds)) {\n    console.error('allIds is not an array or is undefined');\n    return [];\n    }\n\n    return allIds.map(id => byId[id]);\n};\n\nexport const selectTransactionsByMonth = (state, month, year) => {\n    return Object.values(selectAllTransactions(state)).filter(transaction => {\n        const transactionDate = new Date(transaction.date);\n        return transactionDate.getMonth() === month && transactionDate.getFullYear === year;\n    });\n};\n\n// Select a transaction by id\n\n//  Select Transactions by type\n// selectors.js\n\nexport const selectTransactionsByType = (state, type) => {\n    if (!state || !state.transactions || !state.transactions.byId) {\n        return [];\n    }\n    return Object.values(state.transactions.byId).filter(transaction => transaction.type === type);\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,qBAAqB,GAAIC,KAAK,IAAK;EAC5C,MAAM;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGF,KAAK,CAACG,YAAY;EAC3CC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEL,KAAK,CAAC;EAEzC,IAAI,CAACA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IACrCI,OAAO,CAACE,KAAK,CAAC,oCAAoC,CAAC;IACnD,OAAO,EAAE;EACX;EAAC;;EAID;EACFF,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEJ,IAAI,CAAC;EAC1BG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;EAE9B,IAAI,CAACA,MAAM,IAAI,CAACK,KAAK,CAACC,OAAO,CAACN,MAAM,CAAC,EAAE;IACvCE,OAAO,CAACE,KAAK,CAAC,wCAAwC,CAAC;IACvD,OAAO,EAAE;EACT;EAEA,OAAOJ,MAAM,CAACO,GAAG,CAACC,EAAE,IAAIT,IAAI,CAACS,EAAE,CAAC,CAAC;AACrC,CAAC;AAED,OAAO,MAAMC,yBAAyB,GAAGA,CAACX,KAAK,EAAEY,KAAK,EAAEC,IAAI,KAAK;EAC7D,OAAOC,MAAM,CAACC,MAAM,CAAChB,qBAAqB,CAACC,KAAK,CAAC,CAAC,CAACgB,MAAM,CAACC,WAAW,IAAI;IACrE,MAAMC,eAAe,GAAG,IAAIC,IAAI,CAACF,WAAW,CAACG,IAAI,CAAC;IAClD,OAAOF,eAAe,CAACG,QAAQ,CAAC,CAAC,KAAKT,KAAK,IAAIM,eAAe,CAACI,WAAW,KAAKT,IAAI;EACvF,CAAC,CAAC;AACN,CAAC;;AAED;;AAEA;AACA;;AAEA,OAAO,MAAMU,wBAAwB,GAAGA,CAACvB,KAAK,EAAEwB,IAAI,KAAK;EACrD,IAAI,CAACxB,KAAK,IAAI,CAACA,KAAK,CAACG,YAAY,IAAI,CAACH,KAAK,CAACG,YAAY,CAACF,IAAI,EAAE;IAC3D,OAAO,EAAE;EACb;EACA,OAAOa,MAAM,CAACC,MAAM,CAACf,KAAK,CAACG,YAAY,CAACF,IAAI,CAAC,CAACe,MAAM,CAACC,WAAW,IAAIA,WAAW,CAACO,IAAI,KAAKA,IAAI,CAAC;AAClG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}