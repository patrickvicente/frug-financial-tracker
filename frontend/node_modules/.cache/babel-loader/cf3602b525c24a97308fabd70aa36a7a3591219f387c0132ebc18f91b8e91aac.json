{"ast":null,"code":"var _jsxFileName = \"/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Analytics/ExpenseChart.js\";\nimport React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport \"./chart.css\";\nimport { Chart, ArcElement } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(ArcElement);\nfunction ExpenseChart({\n  expenses\n}) {\n  const expenseData = expenses && expenses.length > 0 ? expenses.map(expense => Math.round(expense.totalSpent), 2) : [];\n  const categories = expenses && expenses.length > 0 ? expenses.map(expense => expense.category) : [];\n  console.log(\"chart categories\", categories);\n  const totalSpent = expenseData.reduce((sum, expense) => sum + expense, 0);\n  const data = {\n    labels: categories,\n    datasets: [{\n      label: \"expense\",\n      data: expenseData,\n      backgroundColor: ['#15AD70',\n      // Original Green\n      '#1E90FF',\n      // Blue\n      '#8A2BE2',\n      // Purple\n      '#20B2AA',\n      // Teal\n      '#FFA500',\n      // Orange\n      '#FF69B4',\n      // Pink\n      '#FFD700',\n      // Yellow\n      '#FF6347' // Red\n      ],\n      hoverOffset: 1,\n      borderColor: \"linear-gradient(107deg, #3D3D3D 8.78%, #1F1F1F 92.99%)\",\n      borderWidth: 3\n    }]\n  };\n  const options = {\n    plugins: {\n      legend: {\n        display: false // Hide the legend\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            let label = context.label || '';\n            if (label) {\n              label += ': ';\n            }\n            label += context.raw;\n            return label;\n          }\n        }\n      }\n    },\n    cutout: \"75%\" // Hollow center for text\n  };\n  const centerTextPlugin = {\n    id: 'centerText',\n    beforeDraw: function (chart) {\n      const {\n        ctx,\n        width,\n        height\n      } = chart;\n      ctx.save();\n\n      // Draw \"Total Expenses\" with 18px font size\n      ctx.font = '18px inter';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = '#F1F0F5'; // Custom color for the text\n\n      ctx.fillText('Total Expenses', width / 2, height / 2 - 10); // Adjusting the Y position to align text correctly\n\n      // Draw totalSpent amount with 20px font size\n      ctx.font = '20px inter';\n      ctx.fillText(`$${totalSpent.toLocaleString()}`, width / 2, height / 2 + 15); // Adjusting the Y position for the amount\n\n      ctx.restore();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: categories && categories.length > 0 ? /*#__PURE__*/_jsxDEV(Doughnut, {\n      className: \"chart-expense\",\n      data: data,\n      options: options,\n      plugins: [centerTextPlugin]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_c = ExpenseChart;\nexport default ExpenseChart;\nvar _c;\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["React","Doughnut","Chart","ArcElement","jsxDEV","_jsxDEV","register","ExpenseChart","expenses","expenseData","length","map","expense","Math","round","totalSpent","categories","category","console","log","reduce","sum","data","labels","datasets","label","backgroundColor","hoverOffset","borderColor","borderWidth","options","plugins","legend","display","tooltip","callbacks","context","raw","cutout","centerTextPlugin","id","beforeDraw","chart","ctx","width","height","save","font","textAlign","textBaseline","fillStyle","fillText","toLocaleString","restore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Analytics/ExpenseChart.js"],"sourcesContent":["import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport \"./chart.css\";\nimport { Chart, ArcElement } from 'chart.js';\nChart.register(ArcElement);\n\nfunction ExpenseChart({ expenses }) {\n    const expenseData = expenses && expenses.length > 0 ? expenses.map(expense => Math.round(expense.totalSpent), 2) : [];\n    const categories = expenses && expenses.length > 0 ? expenses.map(expense => expense.category) : [];\n    console.log(\"chart categories\", categories);\n    const totalSpent = expenseData.reduce((sum, expense) => sum + expense, 0);\n    \n    const data = {\n        labels: categories,\n        datasets: [\n            {\n                label: \"expense\",\n                data: expenseData,\n                backgroundColor: [\n                    '#15AD70', // Original Green\n                    '#1E90FF', // Blue\n                    '#8A2BE2', // Purple\n                    '#20B2AA', // Teal\n                    '#FFA500', // Orange\n                    '#FF69B4', // Pink\n                    '#FFD700', // Yellow\n                    '#FF6347', // Red\n                ],\n                hoverOffset: 1,\n                borderColor: \"linear-gradient(107deg, #3D3D3D 8.78%, #1F1F1F 92.99%)\",\n                borderWidth: 3,\n            }\n        ]\n    };\n\n    const options = {\n        plugins: {\n            legend: {\n                display: false, // Hide the legend\n            },\n            tooltip: {\n                callbacks: {\n                    label: function (context) {\n                        let label = context.label || '';\n\n                        if (label) {\n                            label += ': ';\n                        }\n                        label += context.raw;\n                        return label;\n                    }\n                }\n            },\n        },\n        cutout: \"75%\" // Hollow center for text\n    };\n\n    const centerTextPlugin = {\n        id: 'centerText',\n        beforeDraw: function (chart) {\n            const { ctx, width, height } = chart;\n            ctx.save();\n\n            // Draw \"Total Expenses\" with 18px font size\n            ctx.font = '18px inter';\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = '#F1F0F5'; // Custom color for the text\n\n            ctx.fillText('Total Expenses', width / 2, height / 2 - 10); // Adjusting the Y position to align text correctly\n\n            // Draw totalSpent amount with 20px font size\n            ctx.font = '20px inter';\n            ctx.fillText(`$${totalSpent.toLocaleString()}`, width / 2, height / 2 + 15); // Adjusting the Y position for the amount\n\n            ctx.restore();\n        }\n    };\n\n    return (\n        <div className=\"chart-container\">\n            {categories && categories.length > 0 ? (\n                <Doughnut\n                    className=\"chart-expense\"\n                    data={data}\n                    options={options}\n                    plugins={[centerTextPlugin]}\n                />\n            ) : (\n                <p>No data found</p>\n            )}\n        </div>\n    );\n}\n\nexport default ExpenseChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAO,aAAa;AACpB,SAASC,KAAK,EAAEC,UAAU,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7CH,KAAK,CAACI,QAAQ,CAACH,UAAU,CAAC;AAE1B,SAASI,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAChC,MAAMC,WAAW,GAAGD,QAAQ,IAAIA,QAAQ,CAACE,MAAM,GAAG,CAAC,GAAGF,QAAQ,CAACG,GAAG,CAACC,OAAO,IAAIC,IAAI,CAACC,KAAK,CAACF,OAAO,CAACG,UAAU,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE;EACrH,MAAMC,UAAU,GAAGR,QAAQ,IAAIA,QAAQ,CAACE,MAAM,GAAG,CAAC,GAAGF,QAAQ,CAACG,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACK,QAAQ,CAAC,GAAG,EAAE;EACnGC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,UAAU,CAAC;EAC3C,MAAMD,UAAU,GAAGN,WAAW,CAACW,MAAM,CAAC,CAACC,GAAG,EAAET,OAAO,KAAKS,GAAG,GAAGT,OAAO,EAAE,CAAC,CAAC;EAEzE,MAAMU,IAAI,GAAG;IACTC,MAAM,EAAEP,UAAU;IAClBQ,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,SAAS;MAChBH,IAAI,EAAEb,WAAW;MACjBiB,eAAe,EAAE,CACb,SAAS;MAAE;MACX,SAAS;MAAE;MACX,SAAS;MAAE;MACX,SAAS;MAAE;MACX,SAAS;MAAE;MACX,SAAS;MAAE;MACX,SAAS;MAAE;MACX,SAAS,CAAE;MAAA,CACd;MACDC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE,wDAAwD;MACrEC,WAAW,EAAE;IACjB,CAAC;EAET,CAAC;EAED,MAAMC,OAAO,GAAG;IACZC,OAAO,EAAE;MACLC,MAAM,EAAE;QACJC,OAAO,EAAE,KAAK,CAAE;MACpB,CAAC;MACDC,OAAO,EAAE;QACLC,SAAS,EAAE;UACPV,KAAK,EAAE,SAAAA,CAAUW,OAAO,EAAE;YACtB,IAAIX,KAAK,GAAGW,OAAO,CAACX,KAAK,IAAI,EAAE;YAE/B,IAAIA,KAAK,EAAE;cACPA,KAAK,IAAI,IAAI;YACjB;YACAA,KAAK,IAAIW,OAAO,CAACC,GAAG;YACpB,OAAOZ,KAAK;UAChB;QACJ;MACJ;IACJ,CAAC;IACDa,MAAM,EAAE,KAAK,CAAC;EAClB,CAAC;EAED,MAAMC,gBAAgB,GAAG;IACrBC,EAAE,EAAE,YAAY;IAChBC,UAAU,EAAE,SAAAA,CAAUC,KAAK,EAAE;MACzB,MAAM;QAAEC,GAAG;QAAEC,KAAK;QAAEC;MAAO,CAAC,GAAGH,KAAK;MACpCC,GAAG,CAACG,IAAI,CAAC,CAAC;;MAEV;MACAH,GAAG,CAACI,IAAI,GAAG,YAAY;MACvBJ,GAAG,CAACK,SAAS,GAAG,QAAQ;MACxBL,GAAG,CAACM,YAAY,GAAG,QAAQ;MAC3BN,GAAG,CAACO,SAAS,GAAG,SAAS,CAAC,CAAC;;MAE3BP,GAAG,CAACQ,QAAQ,CAAC,gBAAgB,EAAEP,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;;MAE5D;MACAF,GAAG,CAACI,IAAI,GAAG,YAAY;MACvBJ,GAAG,CAACQ,QAAQ,CAAC,IAAIpC,UAAU,CAACqC,cAAc,CAAC,CAAC,EAAE,EAAER,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;;MAE7EF,GAAG,CAACU,OAAO,CAAC,CAAC;IACjB;EACJ,CAAC;EAED,oBACIhD,OAAA;IAAKiD,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC3BvC,UAAU,IAAIA,UAAU,CAACN,MAAM,GAAG,CAAC,gBAChCL,OAAA,CAACJ,QAAQ;MACLqD,SAAS,EAAC,eAAe;MACzBhC,IAAI,EAAEA,IAAK;MACXQ,OAAO,EAAEA,OAAQ;MACjBC,OAAO,EAAE,CAACQ,gBAAgB;IAAE;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,gBAEFtD,OAAA;MAAAkD,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACtB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACC,EAAA,GAvFQrD,YAAY;AAyFrB,eAAeA,YAAY;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}