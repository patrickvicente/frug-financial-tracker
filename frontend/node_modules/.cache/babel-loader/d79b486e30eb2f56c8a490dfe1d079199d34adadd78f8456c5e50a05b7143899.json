{"ast":null,"code":"var _jsxFileName = \"/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/TransactionForm/TransactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./TransactionForm.css\";\nimport { useDispatch } from \"react-redux\";\nimport { addTransaction } from \"../../redux/slices/transactionsSlice\";\nimport { addBudgetTransaction } from \"../../redux/slices/budgetsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionForm({\n  closeModal,\n  type,\n  categories\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    type: type || \"income\",\n    description: \"\",\n    date: \"\",\n    amount: \"\",\n    category: categories.length > 0 ? categories[0] : \"\"\n  });\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // !!! TO DO handling when form is empty\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Parse and format date\n    const date = new Date(formData.date);\n    const formattedDate = date.toLocaleDateString(\"en-us\", {\n      month: \"short\",\n      day: \"numeric\",\n      year: \"numeric\"\n    });\n    const newTransaction = {\n      ...formData,\n      id: Date.now(),\n      date: formattedDate,\n      amount: parseFloat(formData.amount)\n    };\n    dispatch(addTransaction(newTransaction));\n    if (newTransaction.type === \"expense\") {\n      dispatch(addBudgetTransaction(newTransaction));\n    }\n    console.log(\"Dispatched addTransaction:\", newTransaction);\n    closeModal();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-txn\",\n        type: \"text\",\n        placeholder: \"Description\",\n        name: \"description\",\n        value: formData.description,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Amount\",\n        name: \"amount\",\n        value: formData.amount,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Date\",\n        name: \"date\",\n        value: formData.date,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"transaction-category\",\n        name: \"category\",\n        onChange: handleChange,\n        value: formData.category,\n        children: categories.length > 0 && categories.map(category => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: category\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-txn\",\n        type: \"submit\",\n        children: `Add ${type === \"income\" ? \"income\" : \"Expense\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(TransactionForm, \"dFC/gnLEiInY6m2vGx2Ihm2IlfM=\", false, function () {\n  return [useDispatch];\n});\n_c = TransactionForm;\n;\nexport default TransactionForm;\nvar _c;\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"names":["React","useState","useDispatch","addTransaction","addBudgetTransaction","jsxDEV","_jsxDEV","TransactionForm","closeModal","type","categories","_s","formData","setFormData","description","date","amount","category","length","dispatch","handleChange","e","target","name","value","handleSubmit","preventDefault","Date","formattedDate","toLocaleDateString","month","day","year","newTransaction","id","now","parseFloat","console","log","className","children","onSubmit","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/TransactionForm/TransactionForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./TransactionForm.css\";\nimport { useDispatch } from \"react-redux\";\nimport { addTransaction } from \"../../redux/slices/transactionsSlice\";\nimport { addBudgetTransaction } from \"../../redux/slices/budgetsSlice\";\n\nfunction TransactionForm({closeModal, type, categories}) {\n    const [ formData, setFormData ] = useState({\n        type: type || \"income\",\n        description: \"\",\n        date: \"\",\n        amount: \"\",\n        category: categories.length > 0 ? categories[0] : \"\",\n    });\n\n    const dispatch = useDispatch();\n\n    const handleChange = e => {\n        setFormData({\n            ...formData, \n            [e.target.name]: e.target.value\n        });\n    };\n\n    // !!! TO DO handling when form is empty\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // Parse and format date\n        const date = new Date(formData.date);\n        const formattedDate = date.toLocaleDateString(\"en-us\", {\n            month: \"short\",\n            day: \"numeric\",\n            year: \"numeric\"\n        })\n        const newTransaction = {\n            ...formData,\n            id: Date.now(),\n            date: formattedDate,\n            amount: parseFloat(formData.amount)\n        };\n\n        dispatch(addTransaction(newTransaction))\n\n        if (newTransaction.type === \"expense\") {\n            dispatch(addBudgetTransaction(newTransaction));\n        }\n        console.log(\"Dispatched addTransaction:\", newTransaction)\n        closeModal();\n    };\n\n    return (\n        <div className=\"transaction-form\">\n            <form onSubmit={handleSubmit} >\n                <input className=\"form-txn\" type=\"text\" placeholder=\"Description\" name=\"description\" value={formData.description} onChange={handleChange} required/>\n                <input type=\"number\" placeholder=\"Amount\" name=\"amount\" value={formData.amount} onChange={handleChange} required/>\n                <input type=\"date\" placeholder=\"Date\" name=\"date\" value={formData.date} onChange={handleChange} required/>\n                <select \n                    className=\"transaction-category\" \n                    name=\"category\" \n                    onChange={handleChange}\n                    value={formData.category}\n                > \n                    {\n                        categories.length > 0 && categories.map((category) => {\n                            return <option key={category} >{category}</option>\n                        })\n                    }\n                </select>\n                {/* // TO DO handle Add when it's a NEW CATEGORY\n                // ADD transaction type in cat */}\n                <button className=\"button-txn\" type=\"submit\" >\n                    {`Add ${ type === \"income\" ? \"income\" : \"Expense\"}`}\n                </button>\n            </form>\n        </div>\n    )\n};\n\nexport default TransactionForm;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}