{"ast":null,"code":"var _jsxFileName = \"/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Analytics/FinancesChart.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, TimeScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(TimeScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst FinancesChart = ({\n  data\n}) => {\n  _s();\n  if (!data) {\n    return null;\n  }\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: []\n  });\n  useEffect(() => {\n    const formattedData = {\n      labels: data.map(item => item.date),\n      datasets: [{\n        label: 'Balance',\n        data: data.map(item => item.balance),\n        fill: false,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)'\n      }]\n    };\n    setChartData(formattedData);\n  }, [data]);\n  const options = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'month'\n        }\n      },\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Balance Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(FinancesChart, \"wg7ZY+1YChV8emoBiQ4ADGYysZs=\");\n_c = FinancesChart;\nexport default FinancesChart;\nvar _c;\n$RefreshReg$(_c, \"FinancesChart\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","TimeScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","jsxDEV","_jsxDEV","register","FinancesChart","data","_s","chartData","setChartData","useState","labels","datasets","useEffect","formattedData","map","item","date","label","balance","fill","backgroundColor","borderColor","options","scales","x","type","time","unit","y","beginAtZero","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Analytics/FinancesChart.js"],"sourcesContent":["\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, TimeScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\n\nChartJS.register(TimeScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\n\nconst FinancesChart = ({data}) => {\n    if (!data) {\n        return null\n    }\n    const [chartData, setChartData] = useState({\n        labels: [],\n        datasets: [],\n      });\n    \n      useEffect(() => {\n        const formattedData = {\n          labels: data.map(item => item.date),\n          datasets: [\n            {\n              label: 'Balance',\n              data: data.map(item => item.balance),\n              fill: false,\n              backgroundColor: 'rgba(75,192,192,0.4)',\n              borderColor: 'rgba(75,192,192,1)',\n            },\n          ],\n        };\n        setChartData(formattedData);\n      }, [data]);\n    \n      const options = {\n        scales: {\n          x: {\n            type: 'time',\n            time: {\n              unit: 'month',\n            },\n          },\n          y: {\n            beginAtZero: true,\n          },\n        },\n      };\n    \n      return (\n        <div>\n          <h2>Balance Over Time</h2>\n          <Line data={chartData} options={options} />\n        </div>\n      );\n};\n\nexport default FinancesChart;"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,KAAK,IAAIC,OAAO,EAAEC,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,QAAQ,UAAU;AAC9H,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElCV,OAAO,CAACW,QAAQ,CAACV,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,CAAC;AAEnG,MAAMI,aAAa,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC9B,IAAI,CAACD,IAAI,EAAE;IACP,OAAO,IAAI;EACf;EACA,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC;IACvCC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEFC,SAAS,CAAC,MAAM;IACd,MAAMC,aAAa,GAAG;MACpBH,MAAM,EAAEL,IAAI,CAACS,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;MACnCL,QAAQ,EAAE,CACR;QACEM,KAAK,EAAE,SAAS;QAChBZ,IAAI,EAAEA,IAAI,CAACS,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,OAAO,CAAC;QACpCC,IAAI,EAAE,KAAK;QACXC,eAAe,EAAE,sBAAsB;QACvCC,WAAW,EAAE;MACf,CAAC;IAEL,CAAC;IACDb,YAAY,CAACK,aAAa,CAAC;EAC7B,CAAC,EAAE,CAACR,IAAI,CAAC,CAAC;EAEV,MAAMiB,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE;UACJC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,CAAC,EAAE;QACDC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,oBACE3B,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BhC,OAAA,CAACZ,IAAI;MAACe,IAAI,EAAEE,SAAU;MAACe,OAAO,EAAEA;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEd,CAAC;AAAC5B,EAAA,CA7CIF,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AA+CnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}