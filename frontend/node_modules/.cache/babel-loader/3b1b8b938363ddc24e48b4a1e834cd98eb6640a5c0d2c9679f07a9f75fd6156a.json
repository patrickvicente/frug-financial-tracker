{"ast":null,"code":"var _jsxFileName = \"/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Analytics/ExpenseChart.js\";\nimport React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Chart, ArcElement } from 'chart.js';\nimport './chart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(ArcElement);\nfunction ExpenseChart({\n  expenses\n}) {\n  const expenseData = expenses && expenses.length > 0 ? expenses.map(expense => expense.totalSpent) : [];\n  const categories = expenses && expenses.length > 0 ? expenses.map(expense => expense.category) : [];\n  const data = {\n    labels: categories,\n    datasets: [{\n      label: \"expense\",\n      data: expenseData,\n      backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(255, 159, 64)', 'rgb(201, 203, 207)'],\n      hoverOffset: 4,\n      borderColor: \"transparent\"\n    }]\n  };\n  const options = {\n    plugins: {\n      legend: {\n        display: false // Hide the legend\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            let label = context.label || '';\n            if (label) {\n              label += ': ';\n            }\n            label += context.raw;\n            return label;\n          }\n        }\n      },\n      // Custom plugin to add text in the center of the doughnut\n      centerText: {\n        text: `Total Expenses`\n      }\n    },\n    cutout: '70%' // Make the center hollow\n  };\n\n  // Custom plugin for center text\n  const centerTextPlugin = {\n    id: 'centerText',\n    beforeDraw: function (chart) {\n      const {\n        ctx,\n        width,\n        height\n      } = chart;\n      ctx.save();\n      const fontSize = (height / 150).toFixed(2);\n      ctx.font = `${fontSize}em sans-serif`;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = '#000';\n      const lines = options.plugins.centerText.text.split('\\n');\n      let textY = height / 2;\n      lines.forEach((line, index) => {\n        ctx.fillText(line, width / 2, textY);\n        textY += 20; // Adjust the line spacing\n      });\n      ctx.restore();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: categories && categories.length > 0 ? /*#__PURE__*/_jsxDEV(Doughnut, {\n      className: \"chart-expense\",\n      data: data,\n      options: options,\n      plugins: [centerTextPlugin] // Register custom plugin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_c = ExpenseChart;\nexport default ExpenseChart;\nvar _c;\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["React","Doughnut","Chart","ArcElement","jsxDEV","_jsxDEV","register","ExpenseChart","expenses","expenseData","length","map","expense","totalSpent","categories","category","data","labels","datasets","label","backgroundColor","hoverOffset","borderColor","options","plugins","legend","display","tooltip","callbacks","context","raw","centerText","text","cutout","centerTextPlugin","id","beforeDraw","chart","ctx","width","height","save","fontSize","toFixed","font","textAlign","textBaseline","fillStyle","lines","split","textY","forEach","line","index","fillText","restore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Analytics/ExpenseChart.js"],"sourcesContent":["import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport {Chart, ArcElement} from 'chart.js'\nimport './chart.css';\nChart.register(ArcElement);\n\nfunction ExpenseChart({ expenses }) {\n    const expenseData = expenses && expenses.length > 0 ? expenses.map(expense => expense.totalSpent) : [];\n    const categories = expenses && expenses.length > 0 ? expenses.map(expense => expense.category) : [];\n    \n\n    const data = {\n        labels: categories,\n        datasets: [\n            {\n                label: \"expense\",\n                data: expenseData,\n                backgroundColor: [\n                    'rgb(255, 99, 132)',\n                    'rgb(54, 162, 235)',\n                    'rgb(255, 205, 86)',\n                    'rgb(75, 192, 192)',\n                    'rgb(153, 102, 255)',\n                    'rgb(255, 159, 64)',\n                    'rgb(201, 203, 207)'\n                ],\n                hoverOffset: 4,\n                borderColor: \"transparent\",\n            }\n        ]\n    };\n\n    const options = {\n        plugins: {\n            legend: {\n                display: false, // Hide the legend\n            },\n            tooltip: {\n                callbacks: {\n                    label: function(context) {\n                        let label = context.label || '';\n\n                        if (label) {\n                            label += ': ';\n                        }\n                        label += context.raw;\n                        return label;\n                    }\n                }\n            },\n            // Custom plugin to add text in the center of the doughnut\n            centerText: {\n                text: `Total Expenses`,\n            }\n        },\n        cutout: '70%', // Make the center hollow\n    };\n\n    // Custom plugin for center text\n    const centerTextPlugin = {\n        id: 'centerText',\n        beforeDraw: function(chart) {\n            const { ctx, width, height } = chart;\n            ctx.save();\n            const fontSize = (height / 150).toFixed(2);\n            ctx.font = `${fontSize}em sans-serif`;\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = '#000';\n\n            const lines = options.plugins.centerText.text.split('\\n');\n            let textY = height / 2;\n            lines.forEach((line, index) => {\n                ctx.fillText(line, width / 2, textY);\n                textY += 20; // Adjust the line spacing\n            });\n\n            ctx.restore();\n        }\n    };\n\n    return (\n        <div className=\"chart-container\">\n            {categories && categories.length > 0 ? (\n                <Doughnut\n                    className=\"chart-expense\"\n                    data={data}\n                    options={options}\n                    plugins={[centerTextPlugin]} // Register custom plugin\n                />\n            ) : (\n                <p>No data found</p>\n            )}\n        </div>\n    );\n}\n\nexport default ExpenseChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}