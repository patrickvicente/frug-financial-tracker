{"ast":null,"code":"var _jsxFileName = \"/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Analytics/FinancesChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, TimeScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(TimeScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst FinancesChart = ({\n  data\n}) => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: []\n  });\n  useEffect(() => {\n    if (data && data.length > 0) {\n      console.log(\"Raw data:\", data);\n      const formattedData = {\n        labels: data.map(item => item.date),\n        datasets: [{\n          label: 'Balance',\n          data: [500, 200, 300],\n          fill: false,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)'\n        }]\n      };\n      console.log(\"Formatted data:\", formattedData);\n      setChartData(formattedData);\n    }\n  }, [data]);\n  const options = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'month'\n        }\n      },\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(FinancesChart, \"7aHF4pQjK29ZnmUXDBh13o5oHNw=\");\n_c = FinancesChart;\nexport default FinancesChart;\nvar _c;\n$RefreshReg$(_c, \"FinancesChart\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","TimeScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","jsxDEV","_jsxDEV","register","FinancesChart","data","_s","chartData","setChartData","labels","datasets","length","console","log","formattedData","map","item","date","label","fill","backgroundColor","borderColor","options","scales","x","type","time","unit","y","beginAtZero","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Analytics/FinancesChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, TimeScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\n\nChartJS.register(TimeScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\n\nconst FinancesChart = ({ data }) => {\n    const [chartData, setChartData] = useState({\n        labels: [],\n        datasets: [],\n    });\n\n    useEffect(() => {\n        if (data && data.length > 0) {\n            console.log(\"Raw data:\", data);\n            const formattedData = {\n                labels: data.map(item => item.date),\n                datasets: [\n                    {\n                        label: 'Balance',\n                        data: [500, 200,300],\n                        fill: false,\n                        backgroundColor: 'rgba(75,192,192,0.4)',\n                        borderColor: 'rgba(75,192,192,1)',\n                    },\n                ],\n            };\n            console.log(\"Formatted data:\", formattedData);\n            setChartData(formattedData);\n        }\n    }, [data]);\n\n    const options = {\n        scales: {\n            x: {\n                type: 'time',\n                time: {\n                    unit: 'month',\n                },\n            },\n            y: {\n                beginAtZero: true,\n            },\n        },\n    };\n\n    return (\n        <div>\n            <Line data={chartData} options={options} />\n        </div>\n    );\n};\n\nexport default FinancesChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,KAAK,IAAIC,OAAO,EAAEC,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,QAAQ,UAAU;AAC9H,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElCV,OAAO,CAACW,QAAQ,CAACV,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,CAAC;AAEnG,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC;IACvCqB,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEFrB,SAAS,CAAC,MAAM;IACZ,IAAIgB,IAAI,IAAIA,IAAI,CAACM,MAAM,GAAG,CAAC,EAAE;MACzBC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAER,IAAI,CAAC;MAC9B,MAAMS,aAAa,GAAG;QAClBL,MAAM,EAAEJ,IAAI,CAACU,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;QACnCP,QAAQ,EAAE,CACN;UACIQ,KAAK,EAAE,SAAS;UAChBb,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAC,GAAG,CAAC;UACpBc,IAAI,EAAE,KAAK;UACXC,eAAe,EAAE,sBAAsB;UACvCC,WAAW,EAAE;QACjB,CAAC;MAET,CAAC;MACDT,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,aAAa,CAAC;MAC7CN,YAAY,CAACM,aAAa,CAAC;IAC/B;EACJ,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;EAEV,MAAMiB,OAAO,GAAG;IACZC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE;UACFC,IAAI,EAAE;QACV;MACJ,CAAC;MACDC,CAAC,EAAE;QACCC,WAAW,EAAE;MACjB;IACJ;EACJ,CAAC;EAED,oBACI3B,OAAA;IAAA4B,QAAA,eACI5B,OAAA,CAACZ,IAAI;MAACe,IAAI,EAAEE,SAAU;MAACe,OAAO,EAAEA;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd,CAAC;AAAC5B,EAAA,CA7CIF,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AA+CnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}