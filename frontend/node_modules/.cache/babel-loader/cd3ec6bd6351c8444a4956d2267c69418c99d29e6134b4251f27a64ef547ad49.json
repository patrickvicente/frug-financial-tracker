{"ast":null,"code":"var _jsxFileName = \"/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Analytics/FinancesChart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, TimeScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(TimeScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst dataTest = [{\n  label: \"Jan\",\n  balance: 2500\n}, {\n  label: \"Feb\",\n  balance: 2000\n}, {\n  label: \"March\",\n  balance: 3000\n}, {\n  label: \"April\",\n  balance: 3800\n}, {\n  label: \"May\",\n  balance: 1500\n}];\nconst FinancesChart = ({\n  data\n}) => {\n  //     const [chartData, setChartData] = useState({\n  //         labels: [],\n  //         datasets: [],\n  //     });\n\n  //     useEffect(() => {\n  //         if (data && data.length > 0) {\n  //             console.log(\"Raw data:\", data);\n  //             const formattedData = {\n  //                 labels: data.map(item => item.date),\n  //                 datasets: [\n  //                     {\n  //                         label: 'Balance',\n  //                         data: data.map(item => item.balance),\n  //                         fill: false,\n  //                         backgroundColor: 'rgba(75,192,192,0.4)',\n  //                         borderColor: 'rgba(75,192,192,1)',\n  //                     },\n  //                 ],\n  //             };\n  //             console.log(\"Formatted data:\", formattedData);\n  //             setChartData(formattedData);\n  //         }\n  //     }, [data]);\n\n  //     const options = {\n  //         scales: {\n  //             x: {\n  //                 type: 'time',\n  //                 time: {\n  //                     unit: 'month',\n  //                 },\n  //             },\n  //             y: {\n  //                 beginAtZero: true,\n  //             },\n  //         },\n  //     };\n\n  const chartData = {\n    labels: dataTest.map(data => data.label),\n    datasets: [{\n      label: \"Balance\",\n      data: dataTest.map(data => data.balance),\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_c = FinancesChart;\nexport default FinancesChart;\nvar _c;\n$RefreshReg$(_c, \"FinancesChart\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","TimeScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","jsxDEV","_jsxDEV","register","dataTest","label","balance","FinancesChart","data","chartData","labels","map","datasets","backgroundColor","borderColor","children","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/patrickvicente/Documents/projects/frug-financial-tracker/src/components/Analytics/FinancesChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, TimeScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\n\nChartJS.register(TimeScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\n\nconst dataTest = [\n    {\n        label: \"Jan\",\n        balance: 2500,\n    },\n    {\n        label: \"Feb\",\n        balance: 2000,\n    },\n    {\n        label: \"March\",\n        balance: 3000,\n    },\n    {\n        label: \"April\",\n        balance: 3800,\n    },\n    {\n        label: \"May\",\n        balance: 1500,\n    }\n]\n\nconst FinancesChart = ({ data }) => {\n//     const [chartData, setChartData] = useState({\n//         labels: [],\n//         datasets: [],\n//     });\n\n//     useEffect(() => {\n//         if (data && data.length > 0) {\n//             console.log(\"Raw data:\", data);\n//             const formattedData = {\n//                 labels: data.map(item => item.date),\n//                 datasets: [\n//                     {\n//                         label: 'Balance',\n//                         data: data.map(item => item.balance),\n//                         fill: false,\n//                         backgroundColor: 'rgba(75,192,192,0.4)',\n//                         borderColor: 'rgba(75,192,192,1)',\n//                     },\n//                 ],\n//             };\n//             console.log(\"Formatted data:\", formattedData);\n//             setChartData(formattedData);\n//         }\n//     }, [data]);\n\n//     const options = {\n//         scales: {\n//             x: {\n//                 type: 'time',\n//                 time: {\n//                     unit: 'month',\n//                 },\n//             },\n//             y: {\n//                 beginAtZero: true,\n//             },\n//         },\n//     };\n\n    const chartData = {\n        labels: dataTest.map((data) => data.label),\n        datasets: [\n            {\n                label: \"Balance\",\n                data: dataTest.map((data) => data.balance),\n                backgroundColor: 'rgba(75,192,192,0.4)',\n                borderColor: 'rgba(75,192,192,1)',\n            }\n        ]\n    }\n\n    return (\n        <div>\n            <Line data={chartData} options={options} />\n        </div>\n    );\n};\n\nexport default FinancesChart;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,KAAK,IAAIC,OAAO,EAAEC,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,QAAQ,UAAU;AAC9H,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElCV,OAAO,CAACW,QAAQ,CAACV,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,CAAC;AAEnG,MAAMI,QAAQ,GAAG,CACb;EACIC,KAAK,EAAE,KAAK;EACZC,OAAO,EAAE;AACb,CAAC,EACD;EACID,KAAK,EAAE,KAAK;EACZC,OAAO,EAAE;AACb,CAAC,EACD;EACID,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE;AACb,CAAC,EACD;EACID,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE;AACb,CAAC,EACD;EACID,KAAK,EAAE,KAAK;EACZC,OAAO,EAAE;AACb,CAAC,CACJ;AAED,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACpC;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEI,MAAMC,SAAS,GAAG;IACdC,MAAM,EAAEN,QAAQ,CAACO,GAAG,CAAEH,IAAI,IAAKA,IAAI,CAACH,KAAK,CAAC;IAC1CO,QAAQ,EAAE,CACN;MACIP,KAAK,EAAE,SAAS;MAChBG,IAAI,EAAEJ,QAAQ,CAACO,GAAG,CAAEH,IAAI,IAAKA,IAAI,CAACF,OAAO,CAAC;MAC1CO,eAAe,EAAE,sBAAsB;MACvCC,WAAW,EAAE;IACjB,CAAC;EAET,CAAC;EAED,oBACIZ,OAAA;IAAAa,QAAA,eACIb,OAAA,CAACZ,IAAI;MAACkB,IAAI,EAAEC,SAAU;MAACO,OAAO,EAAEA;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd,CAAC;AAACC,EAAA,GAzDId,aAAa;AA2DnB,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}